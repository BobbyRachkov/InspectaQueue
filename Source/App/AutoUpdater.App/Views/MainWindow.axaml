<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:AutoUpdater.App.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:li="clr-namespace:LoadingIndicators.Avalonia;assembly=LoadingIndicators.Avalonia"
        mc:Ignorable="d"
        x:Class="AutoUpdater.App.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/iq.ico"
        SystemDecorations="None"
        WindowStartupLocation="CenterScreen"
        Width="250"
        Height="400"
        RequestedThemeVariant="Dark"
        Foreground="White"
        Background="{Binding Background}"
        Title="InspectaQueue Installer">

  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:MainWindowViewModel/>
  </Design.DataContext>
  <Border
      BorderBrush="{Binding AccentColor}"
      BorderThickness="1 1 1 1">
    <Grid RowDefinitions="*,200">
      <Grid Grid.Row="0">
        <li:LoadingIndicator
            Foreground="{Binding AccentColor}"
            IsActive="{Binding IsBusy}"
            Mode="DoubleBounce">
          <li:LoadingIndicator.RenderTransform>
            <ScaleTransform ScaleX="2.3" ScaleY="2.3"/>
          </li:LoadingIndicator.RenderTransform>
        </li:LoadingIndicator>
        <Image
            Height="80"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Source="../Assets/iq_logo.png"/>
      </Grid>
      <Grid
            Grid.Row="1">
          <ItemsControl
              Background="Transparent"
              FontSize="13"
              Margin="10 0"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top"
              ItemsSource="{Binding Stages}">

              <!--Use a StackPanel to display all the modules-->
              <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                      <StackPanel />
                  </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>

              <!--This defines the layout for each item (i.e. each module)-->
              <ItemsControl.ItemTemplate>
                  <DataTemplate>
                      <Grid ColumnDefinitions="*,50" Margin="5 5">
                          <TextBlock Text="{Binding Name}"/>
                          <TextBlock Grid.Column="1" Text="{Binding Status}"/>
                      </Grid>
                  </DataTemplate>
              </ItemsControl.ItemTemplate>
          </ItemsControl>
        <StackPanel
            Margin="0 0 0 25"
            VerticalAlignment="Bottom"
            HorizontalAlignment="Center"
            Width="200"
            Orientation="Vertical">
          <StackPanel.Styles>
            <Style Selector="Button">
              <Setter Property="HorizontalAlignment" Value="Stretch"/>
              <Setter Property="HorizontalContentAlignment" Value="Center"/>
              <Setter Property="Background" Value="{Binding AccentColor}"/>
              <Setter Property="Margin" Value="0 5 0 0"/>
            </Style>
          </StackPanel.Styles>
          <Button
              IsVisible="{Binding IsInstallButtonVisible}"
              Command="{Binding InstallCommand}">
            Install
          </Button>
          <Button
              IsVisible="{Binding IsUpdateButtonVisible}"
              Command="{Binding UpdateCommand}">
            Update
          </Button>
          <Button
              IsVisible="{Binding IsUninstallButtonVisible}"
              Command="{Binding UninstallCommand}">
            Uninstall
          </Button>
          <Button
              IsVisible="{Binding IsCancelButtonVisible}"
              Command="{Binding CloseCommand}">
            Cancel
          </Button>
          <Button
              IsVisible="{Binding IsCloseButtonVisible}"
              Command="{Binding CloseCommand}">
            Close
          </Button>
        </StackPanel>
      </Grid>
    </Grid>
  </Border>
</Window>
