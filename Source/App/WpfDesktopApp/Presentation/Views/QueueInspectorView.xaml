<UserControl x:Class="Rachkov.InspectaQueue.WpfDesktopApp.Presentation.Views.QueueInspectorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Rachkov.InspectaQueue.WpfDesktopApp.Presentation.Views"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:queueInspector="clr-namespace:Rachkov.InspectaQueue.WpfDesktopApp.Presentation.ViewModels.QueueInspector"
             d:DataContext="{d:DesignInstance Type=queueInspector:QueueInspectorViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        
        <Expander
            IsExpanded="True"
            Margin="5">
            <Grid>
                <CheckBox
                    IsChecked="{Binding FormatJson}">Format if valid JSON</CheckBox>
                <StackPanel
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <CheckBox
                        IsChecked="{Binding Topmost}"
                        Margin="10 0">Topmost</CheckBox>
                    <Button Command="{Binding DisconnectCommand}">Disconnect</Button>
                </StackPanel>
            </Grid>
        </Expander>
        <DataGrid x:Name="MetroDataGrid"
                  ScrollViewer.CanContentScroll="False"
                  Grid.Row="1"
                  Margin="5"
                  AutoGenerateColumns="False"
                  EnableColumnVirtualization="True"
                  EnableRowVirtualization="True"
                  HeadersVisibility="All"
                  ItemsSource="{Binding Path=Entries}"
                  SelectionUnit="FullRow"
                  ColumnHeaderHeight="30" 
                  IsReadOnly="True"
                  SelectionMode="Single">
            <DataGrid.Columns>
                <DataGridTextColumn 
                    Binding="{Binding MessageInternalId}"
                    Header="#"
                    Width="Auto">
                </DataGridTextColumn>
                <DataGridTextColumn 
                    Binding="{Binding MessageId}" 
                    Header="Id" 
                    Width="Auto"/>
                <DataGridTextColumn 
                    Binding="{Binding MessageKey}" 
                    Header="Key"
                    Width="250"/>
                <DataGridTextColumn 
                    Binding="{Binding DisplayableMessageText}"
                    Header="Content"
                    Width="700"/>
                <!--<DataGridTextColumn 
                    Binding="{Binding RawMessageText }" 
                    Header="Content" >
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Custom column 1"></TextBlock>
                                <ComboBox>
                                    <ComboBoxItem>1</ComboBoxItem>
                                    <ComboBoxItem>2</ComboBoxItem>
                                    <ComboBoxItem>3</ComboBoxItem>
                                </ComboBox>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>-->
            </DataGrid.Columns>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGrid}" TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground" Value="{DynamicResource MahApps.Brushes.Gray10}" />
                </Style>
            </DataGrid.Style>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGridRow}" TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <!--<DataTrigger Binding="{Binding Price, Mode=OneWay, Converter={StaticResource AlbumPriceIsTooMuchConverter}}" Value="True">
                            <Setter Property="Background" Value="#FF8B8B" />
                            <Setter Property="Foreground" Value="DarkRed" />
                        </DataTrigger>-->
                        <!--  IsMouseOver  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <!--<Condition Binding="{Binding Price, Mode=OneWay, Converter={StaticResource AlbumPriceIsTooMuchConverter}}" Value="True" />-->
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Gray7}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy row" Command="Copy" CommandParameter="{Binding}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <StatusBar Grid.Row="2" VerticalContentAlignment="Center">
            <StatusBarItem>@Bobi Rachkov</StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
